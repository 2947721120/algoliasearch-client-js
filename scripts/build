#!/usr/bin/env bash
set -e # exit when error

# Use this with `npm run build` so that `./node_modules/.bin` are injected into
# the PATH

license="/*! algoliasearch ${PACKAGE_VERSION} | Â© 2014, 2015 Algolia SAS | github.com/algolia/algoliasearch-client-js */"

echo 'Building algoliasearch-client-js'

echo '..Parse cloud build using webpack'
webpack --silent --config scripts/parse-build.webpack.config.js > /dev/null
# remove 'use strict'; from parse build, otherwise `global = {}` will fail, omg
sed -i "s/'use strict';//g" dist/algoliasearch.parse.js

bundles=( 'algoliasearch' 'algoliasearch.angular' 'algoliasearch.jquery' )

echo '..Add browserify bundles'
# cannot use a loop, bundles are different (--standalone)
browserify -p bundle-collapser/plugin src/browser/builds/algoliasearch.js --standalone algoliasearch > dist/algoliasearch.js
browserify -p bundle-collapser/plugin src/browser/builds/algoliasearch.angular.js > dist/algoliasearch.angular.js
browserify -p bundle-collapser/plugin src/browser/builds/algoliasearch.jquery.js > dist/algoliasearch.jquery.js

echo '..Minify'
for bundle in "${bundles[@]}"
do
  uglifyjs dist/"$bundle".js -mc 'warnings=false' > dist/"$bundle".min.js
done

echo '..Prepend license'
# We prepend the license to be sure it's always present, no matter the used minifier
# http://www.cyberciti.biz/faq/bash-prepend-text-lines-to-file/
for bundle in "${bundles[@]}"
do
  echo "$license" | cat - dist/"$bundle".js > /tmp/out && mv /tmp/out dist/"$bundle".js
  echo "$license" | cat - dist/"$bundle".min.js > /tmp/out && mv /tmp/out dist/"$bundle".min.js
done

echo '..Gzipped file size'
for bundle in "${bundles[@]}"
do
  echo "${bundle}.js gzipped will weight" $(cat dist/"${bundle}".min.js | gzip -9 | wc -c | pretty-bytes)
done

echo 'Done'
